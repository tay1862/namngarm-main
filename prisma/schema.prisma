// NAMNGAM Database Schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ============================================
// USER & AUTHENTICATION
// ============================================

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  password      String
  name          String
  role          UserRole  @default(ADMIN)
  isActive      Boolean   @default(true)
  lastLoginAt   DateTime?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  
  products      Product[]
  articles      Article[]
  
  @@index([email])
}

enum UserRole {
  SUPER_ADMIN
  ADMIN
  EDITOR
}

// ============================================
// CATEGORY
// ============================================

model Category {
  id            String    @id @default(cuid())
  slug          String    @unique
  
  name_lo       String
  name_th       String
  name_zh       String
  name_en       String
  
  description_lo String?   @db.Text
  description_th String?   @db.Text
  description_zh String?   @db.Text
  description_en String?   @db.Text
  
  image         String?
  order         Int       @default(0)
  isActive      Boolean   @default(true)
  
  products      Product[]
  
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  
  @@index([slug])
  @@index([isActive])
}

// ============================================
// PRODUCT
// ============================================

model Product {
  id            String    @id @default(cuid())
  slug          String    @unique
  
  name_lo       String
  name_th       String
  name_zh       String
  name_en       String
  
  description_lo String   @db.Text
  description_th String   @db.Text
  description_zh String   @db.Text
  description_en String   @db.Text
  
  price         Decimal?  @db.Decimal(10, 2)
  currency      String    @default("LAK")
  sku           String?   @unique
  
  images        ProductImage[]
  featuredImage String?
  
  categoryId    String
  category      Category  @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  
  metaTitle_lo  String?
  metaTitle_th  String?
  metaTitle_zh  String?
  metaTitle_en  String?
  
  metaDesc_lo   String?   @db.Text
  metaDesc_th   String?   @db.Text
  metaDesc_zh   String?   @db.Text
  metaDesc_en   String?   @db.Text
  
  isPublished   Boolean   @default(true)
  isFeatured    Boolean   @default(false)
  order         Int       @default(0)
  
  publishedAt   DateTime?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  
  createdById   String
  createdBy     User      @relation(fields: [createdById], references: [id])
  
  @@index([slug])
  @@index([categoryId])
  @@index([isPublished])
  @@index([isFeatured])
}

model ProductImage {
  id          String   @id @default(cuid())
  productId   String
  product     Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  
  url         String
  alt_lo      String?
  alt_th      String?
  alt_zh      String?
  alt_en      String?
  order       Int      @default(0)
  
  createdAt   DateTime @default(now())
  
  @@index([productId])
}

// ============================================
// ARTICLE (BLOG)
// ============================================

model Article {
  id            String    @id @default(cuid())
  slug          String    @unique
  
  title_lo      String
  title_th      String
  title_zh      String
  title_en      String
  
  excerpt_lo    String?   @db.Text
  excerpt_th    String?   @db.Text
  excerpt_zh    String?   @db.Text
  excerpt_en    String?   @db.Text
  
  content_lo    Json
  content_th    Json
  content_zh    Json
  content_en    Json
  
  featuredImage String?
  imageAlt_lo   String?
  imageAlt_th   String?
  imageAlt_zh   String?
  imageAlt_en   String?
  
  metaTitle_lo  String?
  metaTitle_th  String?
  metaTitle_zh  String?
  metaTitle_en  String?
  
  metaDesc_lo   String?   @db.Text
  metaDesc_th   String?   @db.Text
  metaDesc_zh   String?   @db.Text
  metaDesc_en   String?   @db.Text
  
  isPublished   Boolean   @default(false)
  isFeatured    Boolean   @default(false)
  viewCount     Int       @default(0)
  
  publishedAt   DateTime?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  
  createdById   String
  createdBy     User      @relation(fields: [createdById], references: [id])
  
  tags          ArticleTag[]
  
  @@index([slug])
  @@index([isPublished])
  @@index([publishedAt])
}

model Tag {
  id            String      @id @default(cuid())
  name_lo       String      @unique
  name_th       String
  name_zh       String
  name_en       String
  slug          String      @unique
  
  articles      ArticleTag[]
  
  createdAt     DateTime    @default(now())
  
  @@index([slug])
}

model ArticleTag {
  articleId     String
  article       Article     @relation(fields: [articleId], references: [id], onDelete: Cascade)
  
  tagId         String
  tag           Tag         @relation(fields: [tagId], references: [id], onDelete: Cascade)
  
  @@id([articleId, tagId])
  @@index([articleId])
  @@index([tagId])
}

// ============================================
// SITE SETTINGS
// ============================================

model SiteSettings {
  id            String   @id @default("site_settings")
  
  siteName_lo   String   @default("NAMNGAM")
  siteName_th   String   @default("NAMNGAM")
  siteName_zh   String   @default("NAMNGAM")
  siteName_en   String   @default("NAMNGAM")
  
  logo          String?
  favicon       String?
  
  homeBg        String?
  aboutBg       String?
  productsBg    String?
  articlesBg    String?
  
  email         String?
  phone         String?
  address_lo    String?  @db.Text
  address_th    String?  @db.Text
  address_zh    String?  @db.Text
  address_en    String?  @db.Text
  
  whatsapp      String?
  whatsappMessage_lo String? @db.Text
  whatsappMessage_th String? @db.Text
  whatsappMessage_zh String? @db.Text
  whatsappMessage_en String? @db.Text
  
  facebookPage  String?
  lineId        String?
  
  defaultMetaDesc_lo String? @db.Text
  defaultMetaDesc_th String? @db.Text
  defaultMetaDesc_zh String? @db.Text
  defaultMetaDesc_en String? @db.Text
  
  googleAnalyticsId String?
  facebookPixelId   String?
  
  isUnderMaintenance Boolean @default(false)
  maintenanceMessage_lo String? @db.Text
  maintenanceMessage_th String? @db.Text
  maintenanceMessage_zh String? @db.Text
  maintenanceMessage_en String? @db.Text
  
  updatedAt     DateTime @updatedAt
  
  @@map("site_settings")
}

// ============================================
// QUICK LINKS (Contact Widget)
// ============================================

model QuickLink {
  id            String   @id @default(cuid())
  
  type          LinkType
  
  label_lo      String
  label_th      String
  label_zh      String
  label_en      String
  
  url           String
  icon          String?
  color         String?
  
  order         Int      @default(0)
  isActive      Boolean  @default(true)
  
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  @@index([isActive, order])
}

enum LinkType {
  WHATSAPP
  FACEBOOK
  LINE
  PHONE
  EMAIL
  TELEGRAM
  WECHAT
  CUSTOM
}

// ============================================
// HOMEPAGE SECTIONS
// ============================================

model HomeSection {
  id            String      @id @default(cuid())
  
  type          SectionType
  
  title_lo      String
  title_th      String
  title_zh      String
  title_en      String
  
  subtitle_lo   String?     @db.Text
  subtitle_th   String?     @db.Text
  subtitle_zh   String?     @db.Text
  subtitle_en   String?     @db.Text
  
  content_lo    Json?
  content_th    Json?
  content_zh    Json?
  content_en    Json?
  
  backgroundImage String?
  
  order         Int         @default(0)
  isActive      Boolean     @default(true)
  
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  
  @@index([isActive, order])
}

enum SectionType {
  HERO
  ABOUT
  PRODUCTS
  ARTICLES
  CONTACT
  CUSTOM
}

// ============================================
// FAQ
// ============================================

model FAQ {
  id            String    @id @default(cuid())
  
  question_lo   String    @db.Text
  question_th   String    @db.Text
  question_zh   String    @db.Text
  question_en   String    @db.Text
  
  answer_lo     String    @db.Text
  answer_th     String    @db.Text
  answer_zh     String    @db.Text
  answer_en     String    @db.Text
  
  categoryId    String?
  category      FAQCategory? @relation(fields: [categoryId], references: [id], onDelete: SetNull)
  
  order         Int       @default(0)
  isActive      Boolean   @default(true)
  
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  
  @@index([categoryId])
  @@index([isActive])
  @@index([order])
}

model FAQCategory {
  id            String    @id @default(cuid())
  
  name_lo       String
  name_th       String
  name_zh       String
  name_en       String
  
  description_lo String?   @db.Text
  description_th String?   @db.Text
  description_zh String?   @db.Text
  description_en String?   @db.Text
  
  order         Int       @default(0)
  isActive      Boolean   @default(true)
  
  faqs          FAQ[]
  
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  
  @@index([isActive])
  @@index([order])
}

// ============================================
// MEDIA LIBRARY
// ============================================

model Media {
  id            String      @id @default(cuid())
  
  filename      String
  originalName  String
  mimeType      String
  size          Int
  url           String
  path          String
  
  alt_lo        String?
  alt_th        String?
  alt_zh        String?
  alt_en        String?
  
  width         Int?
  height        Int?
  
  folder        String?
  
  uploadedAt    DateTime    @default(now())
  
  @@index([folder])
  @@index([uploadedAt])
}
